<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAB/GQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAGUZJ
        REFUeNrt3WlsXed95/HvWe4lL0ntFCVLsiybtJQ6saLYTpw4iTJxLFOtY6dW6iYBWmASJEgwcNDpLPAA
        g8xM0HY6W4E20GAmUTEJ2qaaxLFbR3ZKhvI6tmXLsmMnkmVbFLWSlMSdvJd3O8u8uJRNS1zOuQvv9vsA
        hgHqLM95zvP87/M85znPARERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        EREREREREREREZGlZFz5h/4DexqBO4EdwBrABHA97FSWpnInWKRQEYtM1CY1609x4CTQtfHeRy+UO31L
        6d0A0H9gD8C/AL4LtJY7YSJl4AE/Ah7aeO+jw+VOzFIwAPoP7LGBvwW+XO4EiVSA00DnxnsffafcCSk1
        c+b//xVVfpHLtgAH+g/saSl3QkrN7D+wZzvwL8udEJEKsxV4qNyJKDUT+CbvtQRE5D3fmuke1ywbuKvc
        iRCpUK3knoYdCbrDvffd83XH8f/Ccb3lc/27ZRrTEdv8kwMHnvgv5b44yP3ybyp3IkQq2IagG95//307
        U2l333yVH8D1/KZUxv3z373v83vKfWGQCwB6ti8yv8D1I5nO/rOg26ay7q5yXxio7y+yoKmkETgAeK4f
        C7qtYRiBWxalpAAgsoBkhsZyp6GUanqEU6RQb18wOx/8xleiQbY9f2nqY4mUU+4kh6IAILKA0bhxH3Bf
        kG0bozbVFgDUBRCpYwoAInVMAUCkjikAiNSxvAYBfR8Ove1w7JzLmWGPVKbcl1EEBqxbYbClzeSzH7Jp
        XRYsNmYcnyd/49B7weP8iIfrlvtCCmeZsHGNSfs6k8/dbNMYNQo63q9Oubx+yuX0kEci5S/ZdZgGXLPa
        5IY2k89tt2lpDH8dW9d7//nNfmtfkG0nEumHgG8t2QUWQegAMDHt84OeNMfOeeVOe9ENT/ocO+fx1G8c
        /nBnlDs+sHD2nB7y+N/daS6ML12hXioXJ1xe63N55pjDN++O0rHeCn2MVMbnR09neOlE+aLipUmXN067
        PHXU4et3Rbl5c7jraIkxsnff/tNBtr27c/d42S40T6G6AL5PzVb+2ZIZ2Pdkht4L8xfcRNrnrx6vzco/
        29Ckz/eeSDOVDH+d+1/IlrXyzzYx7bP3n9JcmqjtshtWqACQa/bXRwb6Pvyfp+bv2zzyUpaxRG1X/ssm
        k/DTF8P1804Mujx7rLKeiaez8HfP1UJ/tXhCBYBj5yojmi+VgVGf8Xkqeb3lRdjA/2aF/lC81e/hevUR
        uIMINQZwZnj+m2oYBpZlYRiFDRgtNc/zcBcYuTsz5LGy+f39xlTG5+ICTX/TNDEti2rKCR/wXBfPm/se
        j8Z94ik/8EBaoWXF930c5+oWhGmaWNb8/Xif3D315rmnGQcujPlsXFNNd6d0QgWA+Ub7o9Eosaamqqv8
        lzmOQyIex/evrtSpzNV/Sy/Qso01NdHQ0FDuS8pbJp1menp6zn9LZYIHgLnyDcCORGhubl60rPi+z8T4
        +FV/j0ajNMYWf+kum82SiMfnTlu2lDlYXQqeB2AYRlVXfgDbtmloLPylLzsSqerKDxBtaCASiZTs+E1L
        VFYiNXAvlkLBAaAam/1zse3C34uyrfCPyiqRVYS8mItpmpjm0s09s5b4fhiGEXzU0/fjgbctoaK0AGRG
        jeRFqa5iycvKEp8v1mCfCLqtZZuvLG1mzE1TgUWK5B8fO/A3DRHr0cW2i9jmU8ubonvLnV7QegAiRfX4
        40988YEv3rfD9fxb5vp30zSP/uyRxw6XO52XKQCIFNnDj/z8deD1cqcjCHUBROqYAoBIHVMAEKljCgAi
        dUwBQKSOKQCI1DEFAJE6pgAgUscUAETqmAKASB1TABCpYwoAInWs4AAw3xpy1Wau5cBCH6NG8sIrQl5I
        dSg4ALiuO+8CjNUkmyl8uehsNluUQFJOvu/jZLVoXr0oyuvA8XicWFNTbkmsKlsVx/M8Muk0mSIEAM/z
        SMTjNMZiS74cVTG4rksqlVpwlWSpLaECwKoWg+Gpq3/hLhf8WrRq2dUBraURIhZk56gnjuMQn5oqd7KL
        zjRheVN1BXdZXKguwPVt9TVmaBhwXevV12yZBte21ldebFxtErXrLwCsjHkt5U5DKYUqxXdss1nCRV3L
        7vYOi4bI3IV+503V18QvxM7fqq/rvcz1+US501BKoarzljaT+24r3ZrxlWRFk8EffCY6779/5qYI26+r
        j0qxbaPJXdvr475fqbmBu3+x94EPlDsdpRL69/wLH4vwtTujxKJh96we268z+U9falzwKziGAd/+nSj3
        3GJj1mjL2AB2fdjmX3++odrGdosmYmHe0OZ+/+G/eKDwL8dUoNBPAQxg5002t7Vb9F30ODPk1cSnlgwD
        2lYYXN9msmG1GWht/Ihl8MAdUe7aHqHvosf5UQ+nBgbQLRM2rja4YZ3FmmV1WvNnWRZj5/bN7gtP7H3g
        q/c8+PCvy52eYsr7MWBTg8GHNlt8aHN9NIMXsqrF4NYWi1vblRe1qqWRW7Zvdt849pM9r5sG/zAwavaN
        J42DX/zjhy+UO22F0LLgIgGZBqxsYgewY/lGD9+H4z/dM+l6HLFMnh0YM/vGpo2Dv1dFQUEBQCRPhgHL
        YywH7gTuXB57Lyh4HkdMk2f7Z1oKlRoUFABEiuiqoDBHS6F/1OwbnzYO/t6/Kn9QUAAQKbFKDgoKACJl
        UClBQQFApEIEDQqjcePg7/+b4gQFBQCRClbqoKAAIFJlggSF8yNmX9qh6/Pf/tnwQsdSABCpAVcGhZs2
        5YJC7yN7LjRGOGgY/BPw6MZ7H03N3q+O3u0TqS+GAbEo6w2DPwB+DAz2H9jz3f4De96t9woAIvVjJfAf
        gIf7D+xpBAUAkXq0B/grUAAQqVdf6z+wZ7sCgEh9soFvKwCI1K/t9p88nCr8MFLztm00+f07angZqPp0
        k33yYm18zUZK6+RFj10ftlnVrEZjDWnR3ZTA9L2Q2qMAIFLHFAAksCr82pkswm5fpxggi9u20VT/v8L5
        PrgpFy8b/AO19ndqc7lzkbrhZT2mTiZJD2fxnXBfp9bbgCJVzJl2GXt9Ci+T32fp1aYTqVK+7zN5PJF3
        5QcFAJGqlR7Okp0q7NmsAoBIlSq08gPY/6s7Xe7rkCqw9RqTz9XpF4IrlZcqfBav/fIJTe+Sxb18wuWj
        HTbLm/Sx0Epht1hwqbBjqAsggWVCPmKS0oquLPwhngKASJWKLLeJbWgo6BgKABKYodZ/xVnWHqOhLf+x
        GVt9Ogli6zUmq/XyaMUxLIOVN7WQasuQHsrixJ1wU4G/97VYua9BRArU2BqlsTX8gi0K6SJ1TAFApI4p
        AIjUMQUAkTqm14FnSWVheMogmTFIZiCZMci60BCBWNQnFoXmBp+1y3wshU4JyPFgeNIgkTZIZnPlKp0F
        04SoBQ0Rn1XNPmtacmVsKdV1AEhmoPeiyflRk/5Rg6GpYLXaNn2uWemzcbXHtWt8rl/rKSDIu1wP+i6Z
        nBsx6B8zGRw3cL1gj9uXNfpc1+qxZa1He5tHU2HzfBZVdwHA9+HMsMEbZy3eHjQD35jZHM/g3KjBuVGT
        l3pzrYLt17ps3+yxukXTZevV8JTBG2dNjp6zmM7kN79mKmVw9LzF0fMWpuFz43qPD2/2uKHNK8lErLoK
        AG8NmjzzpsVYorg/14m0waFem0O90L7O486bHFqXKRDUi0sTBk++aXN6qLjlyvMN3h60eHvQom25x6e2
        uWxdX9xAUBcB4MKEwcGjNudGSt9OP3nR5NSlKB/Z4vKpbQ5N+phOzUqk4bnjNm+ctSh1uL80afLoKyYb
        Vnn89naHthXFOWNNBwDPh+eOW7zUa5f8Bl153ldPWRw7b3LvLQ4d6/T1pVrz1oDJL163STtLO5V+YMzk
        h89Fub3DYec2F7PA37SaDQDTafjHVyOcGQ6WQ47rkUhmSWddHNfDcX0cx8PzfSzTwLZMbNvEtkxiDTZN
        jTbmIm2xVNbg4ZcjfHKrw6e2uZh67aLqeR48fdzi8MlgVcfzfaaTWZLpy+Vq5j9vVrmycv9viFi0xCJY
        i4woez4cOmHTP2ryu7dlaS5goLAmA8DFiVzFm0otXOOyjsfUdIZ4Mksy7cy7nev5ZBwPZi2eZBjQ0hih
        pSlCSyyKuUDtfuEdm4Exk/s/mqWhJnO8PiQz8MjhCOdGF6mgnv9uuUqksvj+/Ntlnatbh7EGm5ZYhGVN
        USL2/Oc6O2Lyw2ejfPkT2bzHnGquOA5NGuw/FCG5wCis63qMTKYYn0rn3TXwfZhKZplKZrGsJK0rYqxo
        jmLM0yo4NWTy8MsRvnR7lkjN5XrtS2fhJy9FGByfv0L6vs94PM3IRArXy7/TmUw7JNMOwxNJVrY0sGZF
        I9Y8bf2plMGPX4jw5U9kWZfHuEBNPb0emTL4+wUqv+f7jEwk6RuYZKyAyn8l1/W5ODrN6cFJ4tOZebc7
        N2Lys1ciOFqFrapkHPjpywtX/snpDKcGJ7k0liyo8s/m+zA2laZvYJLRyRT+PE2J6YzBj1+McGY4fB+z
        ZgLAVAr+/sUI0+m5M8FxPc5dnGJ4IoXnl2ZIMON49A8nuDg6Pe/NOj1k8tirNiVKghSZ58Mjr0Q4P0+z
        3/d9LowkGBxOzNmcL0oaPJ+h8STnLsVx3LnPkc4a/N9DEZ57yyLrBD92TTRGfR8OvBYhPk/lT2YcBobi
        OO7S1LrxeJpM1mXD2uY5m27vXLA4csrnozeoKVDpDp2w5n2+77geA8OJBcePiimZdjhzYYqNa5tpjF5d
        dT3f4IV3bF7ps2hf57F2mU9zg89C7YKaCACHeq15R/unpjMMjiSW/Bd3euZmXdu2bM6BnKfftNi8xsur
        3yZLo3/U4Pm3564imazL+Utxsu7SPuJ1XI+zF6fY2NpCc2zupcAyjsHxfovjAY5X9V2AwXGD//fW3N+t
        TmWcslT+y7KOR/9QHG+OPqHrGTz2qsYDKlXGgcdeizBXd971fPqHlr7yX+b7MDCcIJ0tvPBUfQB46piN
        51/dyHHcXOUrd187nXXnDUIjcYPXTlvhDyol90qfxcT01eXK930Gh+O5x8Jl5Pm5IOQWGISqOgD0XTI5
        O8f0Xn8mc5aqz7+YeDLLyERyzn978YRFOlvuFMpsyQy83Dt3YB4eT5JILU2ffzHZmUFnv4BfuaoNAL4P
        zx6f+yaNTaVJZSqrbT0ymSI9R5qSGYPDJ9UKqCQv9VpzTvFNZRxGpyrrU3rJtMN4PJP3/vZfPx1JgdFY
        7gsJy/VhNH71TXK93CSffDXFGrl2UxttratoamokGomQTKVJJJL0XxhiYHAYJ8+O+9BEkk1rW676+6He
        3BtftWRgLANU5jsQj71mszw2//j3aGLuvw+NJ8mXbVts2rCWa9a30tIco7GxgUw6SyKZ4tLQKOfOXyKZ
        yi+4jEwkWdG88GzUeaTsoSnzArCloBytIKOTqTkH3RazfFkTt+74ANddu37e2Xwf2HodWcfh2PFTHH3z
        JNmQgSCRzDKdytLU+P7RW9czGJoqd84VV4U1wN5nPGGEfoknd+/CN/0jEZvtH2znpm3XY9tzB/kbb9iE
        /zGfvtMDvPbG28QT4QKN6/mMTqVoXRF6if8LNtBLjQQAx/UYy6OJtq1jMx//6AcxA7xaFbFtdtx8Ize2
        b+LJZ44wMjYZ6lzDEyk2N+oru9Umn1//ta0ruXPnrTTFFm9gG4ZB+/Ub2bJ5PS++/Bt6T/WHOtfoZIpV
        LQ2Lvkh0hV4TeKK0Wbd0pqYzoUf9b92xjTtuvzlQ5Z+tuSnG79x9BxvWt4baL5l2QrccpLzSGTf0I7fN
        m9bx23d9PFDln82yLD59xw523HxjqP18PzfYHNITJvAokP8oQgUJmwFbO65l+wc78j6fbVt89tO3sGJ5
        S6j94tMa9q8m8WS46rF61XJ2fnIHlpX/uM5Htm+l/fqNofaZCleuMsCj5t59+88CPyhabpWJ6/mh+mgt
        LTE+ftuHCj5vNBph5yd3hNonj0gtZRTmfhmGwWc+uYOIXfgk2zs+dnOoFsR0Ohtm/OsHe/ftP3u53ftd
        YKBoOVYGiZCV6tYPbwvbX5pX6+oV3LBlQ+Dtp9MOboXMUZCFZR0v1CPljhs2sXLFsqKc27YtPrI9eFfA
        9yGRClQPBsjV+dw8gL379g8D9wP5Pz8rszB9tMaGKNdfF7zCBvFbW68LtX1G4wBVIROy7x+2HCym/fpN
        oVoTAdKbAu6fqfPvTQTau2//YeAeYLSoV7BEnBBTIq/dtG7eR335Wtu6isbG4CuAhkmvlE+Y+9TcHGP1
        quVFPb9lmWzasDZEehdsWY4C98zUdeCKmYB79+1/Crgd+GVRr2IJhLlRa1tXFv38hmHQuib4cRUAqkOY
        6eRta1YW/YcFwpXXBcrVL4HbZ+r4u65qW+zdt78X6HzwG1+5E/gq8HkgeArKJEyfuqmxNJ9baQ4xYFMp
        7ynIwsIE6lisNOUqFqpcvS+948DjwA+vrPiXzdu5mNnhqQe/8RUb2AxsoIIDQcZx9wHrg2wbKdGifGGO
        G09mHl+7Mvb9JcmcMohGrDbDuGKKuWGYnus0BTuCT3MsEr/yr4ZJ1HOdQH0ty/Cd5ljkqnEtw+ACAR99
        J1LZPwLuCrJtJZSrdNY9D3yF3EDf2b379i/4aGzRI88coG/mv4q1q3P3WQIGgHznXC963GTw42ay3st7
        9+1/fEkyR/K2q3P3pwkYAJKp0kynCVNefZ++vfv2Px90+6p9G3AOgR9jxhOledgxlZguSXqlrALPyU2E
        nMNfouOGKld1GQD6By8V/eSZTJbh4fGSpFfKKvB9unBpJO83RRfSPzBUkvRCbQWAwJH6wsVRUkXuBpzt
        vxh2tWEFgOoQ+D65rsf5geL+uMQTSYZGxsPsEuotoloKAM8F3dD3fd441lu0E3uex6+PhjreMPDm0mWN
        FOA1IB504zeO9ha0Qs/VxzsRdpfA9QBqKwC8CAQOv2+9c4bxieK8hH/8nTNMTCbC7PKLnu6uylhXShbU
        092VArqCbj86NsmJk+eKcu7csc6H2eU8cCTMDjUTAHq6uzxyzzwD8Tyfg88eIZ0ubOT2wsURjvwqyALM
        7/MPS59DUoDHwmz80pFjDIUbD7pKMpXmyWePhG1N/LynO3CsAmooAMwIVbGmpqb55dOHmU7m91Rg8OII
        Tz73atgViKapwpmWde4XQOAWm+t6HHzmFS4NjeV1skQiyS+fOhx6ZSDy+GGpqYXo2js6+oAvA2uC7jOd
        THPqzCCrVy5n2bJgc1Q8z+PY8VM8f+gNHDf0qO/3e7q7fl7uvJLg+k72Jts7OrYAHwm6j+O6nDzVTzRi
        s2b1isBThM/1X+LgM0eYiod6pAxwFHio72RvqF+jmgoAfSd7vfaOjgHgS2H2y2YdTp7qZ2h4nIZohObm
        xjlXCEql0vSdHuCZ53/FqbOD+XxcdBLY03eyN/TdlfJq7+h4DfgWEHg9N9/36R8c4tTZQSK2RXNzbM51
        AR3H5fzAEC8ePsqvj/Xm+yjxqz3dXe+E3an4by6U2a7O3QCHgI/newzbtlizegXNTY1EIjapZJr4dJLR
        sclCPzTynZ7urj8tdx5JfnZ17v5z4N/lu79hGKxetZyW5hixxijpjMP0dJKR0cl8WpKzPdPT3fXZvNJU
        4jwri12du3cCT1NZYxwDwI093V369a9Suzp3LwdOAG3lTsssDnB7T3fXa/nsXEkVpGh6urueA/5judMx
        Swr4oip/devp7poEHqCy1tD8t/lWfqjRADDjT4GfljsRM77Z0931UrkTIYWb+XH5drnTMeNHPd1df1nI
        AWo2AMw8D/0quZlc5fQ/erq7/qbc+SHF09Pd9QNgb5mT8TzwzUIPUrMBAGCmyd1JyOmRRfTfgIfKnQ9S
        En8EfK9M5z4I3NvT3VVwV6QmBwGvtKtzdxT4n8DXl+iUKeAbPd1df1fua5fS2tW5++vkylbwBSELsxf4
        42JNJa+LAHDZrs7dDwL/HSjlx1DPAg/0dHcdLvhIUhVmnjr9hIAL0uRpmlzFL+o3PGpqItBi+k72Hm7v
        6PhbcjMFb6a4AXCc3JOHP+zp7jpT7muVpdN3svdMe0fH94EkcBtQzMUBHeBHwP093V3PFDvtddUCmG1X
        5+7twJ8BuwmwNNoCJoG/Bv6sp7urKpdUl+LZ1bm7DfgO8M+BcN+Mez+H3Mtt/76nu6tkr47XbQC4bFfn
        7lZyKx9/AbgbCPJCwADwc3JviT1VjMEYqS27Onc3kltL8AvkyleQ7kGc3KvHj5F7ZbzkPyh1HwBmm7lp
        HeRWQN5A7qatAi6Sq/QD5N657gv72qXUr12du03gBmATuTK1AVgHjPFeuRogV66q9utcIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIov7/7ClkDZZZY+5AAAA
        AElFTkSuQmCC
</value>
  </data>
</root>